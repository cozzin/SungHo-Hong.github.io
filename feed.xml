<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://cozzin.github.io/</id><title>cozzin tech blog</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-08-28T08:56:12+00:00</updated> <author> <name>홍성호</name> <uri>https://cozzin.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://cozzin.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://cozzin.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 홍성호 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[코드숨] 스프링 회고</title><link href="https://cozzin.github.io/posts/codesoom-8week/" rel="alternate" type="text/html" title="[코드숨] 스프링 회고" /><published>2022-08-28T06:00:00+00:00</published> <updated>2022-08-28T08:54:30+00:00</updated> <id>https://cozzin.github.io/posts/codesoom-8week/</id> <content src="https://cozzin.github.io/posts/codesoom-8week/" /> <author> <name>홍성호</name> </author> <category term="Spring" /> <summary> 8주간의 코드숨 스프링 과정이 끝났습니다! 매일 저녁마다 해야 하는 과제가 사라진다는 마음에 후련하기도 하고, 더 많이 배우지 못한 것에 대한 아쉬움도 느껴지네요. 이번 글에서는 8주차 회고 겸 전체 과정을 회고하겠습니다. 8주차 회고 - 배포 준비 8주차에는 SpringDocs와 배포 준비가 주제였습니다. Swagger가 아닌 SpringDocs로 문서화 해보는 경험이 새로웠습니다. Docs 만드는 방식은 팀마다 다를 것으로 생각해서 이 과제에서는 가볍게 실험해보는 정도까지만 진행했습니다. 대신 배포하는 것에 좀 더 많은 시간을 할애했습니다. 이미 배포 프로세스가 갖춰진 팀에서는 배포할 때 별다른 수고를 하지 않아도 될 텐데요. 그래서 이렇게 아무것도 세팅되지 않은 환경에서 배포하는 게 중요한 ... </summary> </entry> <entry><title>AWS EC2 생성하고 Github Repository Clone하기</title><link href="https://cozzin.github.io/posts/create-aws-ec2-instance/" rel="alternate" type="text/html" title="AWS EC2 생성하고 Github Repository Clone하기" /><published>2022-08-24T11:00:00+00:00</published> <updated>2022-08-24T11:00:00+00:00</updated> <id>https://cozzin.github.io/posts/create-aws-ec2-instance/</id> <content src="https://cozzin.github.io/posts/create-aws-ec2-instance/" /> <author> <name>홍성호</name> </author> <category term="Spring" /> <summary> 오랜만에 AWS에 EC2 서버 띄우려고 합니다. https://velog.io/@18k7102dy/devops-mono-5, https://velog.io/@18k7102dy/Docker-Spring-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%A5%BC-Docker%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-%EB%B0%B0%ED%8F%AC%ED%95%B4%EB%B4%85%EC%8B%9C%EB%8B%A4 이 글 보면서 따라갑니다. 위의 글이 더 정확할 수 있습니다. 그래도 미래의 저를 위해서 기록해보겠습니다. EC2 instance 생성하기 잊어버린 비밀번호를 찾고ㅋㅋ EC2로 검색해서 들어왔습니다. EC2 instance 생성 화... </summary> </entry> <entry><title>[코드숨] 스프링 7주차 회고 - 보안</title><link href="https://cozzin.github.io/posts/codesoom-7week/" rel="alternate" type="text/html" title="[코드숨] 스프링 7주차 회고 - 보안" /><published>2022-08-24T00:00:00+00:00</published> <updated>2022-08-24T00:00:00+00:00</updated> <id>https://cozzin.github.io/posts/codesoom-7week/</id> <content src="https://cozzin.github.io/posts/codesoom-7week/" /> <author> <name>홍성호</name> </author> <category term="Spring" /> <summary> Authentication: 몇 년 전에 사이드 프로젝트를 위한 서버를 만든 적 있었는데, 인증을 구현하는 것이 큰 관문이었다. 물론 지금도 쉽지는 않지만 이제 내 서비스를 만들 수 있겠다는 생각이 든다. 암호화: 복호화되지 않는 암호화에 대해서 이해가 잘 되지 않았어서 좀 더 살펴봤다. 간단히 말하면 해쉬 값 비교를 통해 동등성을 검증하는 방식이다. 계정 정보 보관은 여전히 두려운 주제이지만 서버개발에서 피해갈 수 없는 부분이다. 리뷰 요청: 지난주 중반까지 PR 리뷰가 되지 않고 있었는데, 따로 요청을 드리지 않았다. 회사일이 바쁘기도 해서 하루하루 미루다보니 3일 정도 지나있었다. 다른 일을 할 때도 조금 지연되었을 때 게으름과 걱정을 이겨내고 바로 도움을 요청하자. 도움을 늦게 요... </summary> </entry> <entry><title>[코드숨] 스프링 6주차 회고 - 로그인</title><link href="https://cozzin.github.io/posts/codesoom-6week/" rel="alternate" type="text/html" title="[코드숨] 스프링 6주차 회고 - 로그인" /><published>2022-08-15T08:59:00+00:00</published> <updated>2022-08-15T08:59:00+00:00</updated> <id>https://cozzin.github.io/posts/codesoom-6week/</id> <content src="https://cozzin.github.io/posts/codesoom-6week/" /> <author> <name>홍성호</name> </author> <category term="Spring" /> <summary> 요약 지난주는 JWT 이용해서 로그인 구현하는 과제를 수행했습니다. 혼자 사이드 프로젝트를 수행할 때 로그인 기능을 만들 때 어려움을 겪었었는데, JWT 토큰을 만들고 주고 받는걸 구현해볼 수 있어서 흥미로웠습니다. 다음에 로그인 기능을 구현할 때 써먹을 수 있을 것 같아서 기대됩니다. 아래는 이번 주에 알게된 2가지 개념입니다. Lombok 사용시 주의할 점 Java에서 모델을 다룰 때 lombok 이라는 라이브러리를 사용해서 Getter, Setter를 자동으로 만들어 줄 수 있습니다. 재밌는 점은 이런 메타 프로그래밍 기법을 사용하면 Code Generator 통해서 생성된 코드를 직접 커밋하는 것은 아니라는 점 입니다. lombok 사용할 때는 주의할 점이 있습니다. @Setter ... </summary> </entry> <entry><title>[코드숨] 스프링 5주차 회고 - 유효성 검사</title><link href="https://cozzin.github.io/posts/codesoom-5week/" rel="alternate" type="text/html" title="[코드숨] 스프링 5주차 회고 - 유효성 검사" /><published>2022-08-08T10:00:00+00:00</published> <updated>2022-08-08T11:30:51+00:00</updated> <id>https://cozzin.github.io/posts/codesoom-5week/</id> <content src="https://cozzin.github.io/posts/codesoom-5week/" /> <author> <name>홍성호</name> </author> <category term="Spring" /> <summary> 이번 주는 시간을 충분히 사용하지 못해서 아쉽지만, 아쉬운대로 회고하고 기록을 남겨본다. 유효성 검사 이번 주 주제는 유효성 검사였다. 앱 개발할 때 적절한 View를 터치했는지, 적절한 정보를 전달했는지 확인하는 것과 비슷하다. API 서버는 Request가 적절한 양식으로 입력되었는지 확인해야 한다. spring-boot-starter-validation 지루할 수 있는 이 과정을 간편하게 처리해준다. Controller 외부에서 전달받은 DTO가 적절한 양식인지 확인해주는데, 유효성을 검사하고 싶은 필드에 어노테이션을 지정하면 된다. 아래는 https://spring.io/guides/gs/validating-form-input/ 예제를 빌려왔다. public class PersonForm... </summary> </entry> </feed>
